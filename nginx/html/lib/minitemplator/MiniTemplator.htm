<!DOCTYPE HTML PUBLIC '-//W3C//DTD HTML 4.0 Transitional//EN' 'http://www.w3.org/TR/REC-html40/loose.dtd'>
<!--NewPage-->
<HTML>
<HEAD>
        <!-- Generated by PhpDoc date: 'Sat, 20 Nov 2004 23:54:33 +0100' -->
        <TITLE>Docs For Class MiniTemplator</TITLE>
<LINK REL ='stylesheet' TYPE='text/css' HREF='phpdoc_stylesheet.css' TITLE='Style'>
</HEAD>
<BODY style="background-color: #eeeeee; font-family: arial; font-size: .9em;">
<!-- Links -->
<a NAME="top"></A>
<table WIDTH="100%" class="links">
 <TR>
   <TD class="font10">
      Links:
      <A HREF="#children_summary" class="links" title="Classes extended from MiniTemplator">Child Classes</A>
      <A HREF="#var_summary" class="links" title="Class Variable Summary">Variables</A>
      <A HREF="#var_inherited_summary" class="links" title="Inherited Class Variable Summary">Inherited Variables</A>
      <A HREF="#functions_inherited" class="links" title="Inherited Method Summary">Inherited Methods</A>
      <A HREF="#method_summary" class="links" title="Method Summary">Methods</A>
      <A HREF="#variable_detail" class="links" title="Variable Detail">Variable Detail</A>
      <A HREF="#method_detail" class="links" title="Method Detail">Method Detail</A>
   </TD>
 </TR>
</TABLE>
<BR>
<!-- Start of Class Data -->
<H2>
        Class MiniTemplator
</H2> (line <span class="linenumber">74</span>)
<pre>
</pre>
<p>
        <b><i>Located in File: Program_Root/MiniTemplator.class.php</i></b><br>
</p>
<hr>
A compact template engine for HTML files.
<br />
<p>Requires PHP 4.0.4 or newer.</p><p><pre>
 Template syntax:

   Variables:
     ${VariableName}

   Blocks:
     &lt;!-- $BeginBlock BlockName --&gt;
     ... block content ...
     &lt;!-- $EndBlock BlockName --&gt;

   Include a subtemplate:
     &lt;!-- $Include RelativeFileName --&gt;
 </pre></p><p><pre>
 General remarks:
  - Variable names and block names are case-insensitive.
  - The same variable may be used multiple times within a template.
  - Blocks can be nested.
  - Multiple blocks with the same name may occur within a template.
 </pre></p><p><pre>
 Public methods:
   readTemplateFromFile   - Reads the template from a file.
   setTemplateString      - Assigns a new template string.
   setVariable            - Sets a template variable.
   setVariableEsc         - Sets a template variable to an escaped string value.
   variableExists         - Checks whether a template variable exists.
   addBlock               - Adds an instance of a template block.
   blockExists            - Checks whether a block exists.
   reset                  - Clears all variables and blocks.
   generateOutput         - Generates the HTML page and writes it to the PHP output stream.
   generateOutputToFile   - Generates the HTML page and writes it to a file.
   generateOutputToString - Generates the HTML page and writes it to a string.
 </pre></p><p>Home page: <a href="http://www.source-code.biz/MiniTemplator">http://www.source-code.biz/MiniTemplator</a><br />  License: This module is released under the GNU/LGPL license (<a href="http://www.gnu.org/licenses/lgpl.html">http://www.gnu.org/licenses/lgpl.html</a>).<br />  Copyright 2003: Christian d'Heureuse, Inventec Informatik AG, Switzerland. All rights reserved.<br />  This product is provided "as is" without warranty of any kind.<br /></p><p>Version history:<br />  2001-10-24 Christian d'Heureuse (chdh): VBasic version created.<br />  2002-01-26 Markus Angst: ported to PHP4.<br />  2003-04-07 chdh: changes to adjust to Java version.<br />  2003-07-08 chdh: Method variableExists added.    Method setVariable changed to trigger an error when the variable does not exist.<br />  2004-04-07 chdh: Parameter isOptional added to method setVariable.    Licensing changed from GPL to LGPL.<br />  2004-04-18 chdh: Method blockExists added.<br />  2004-10-28 chdh:<br />    Method setVariableEsc added.<br />    Multiple blocks with the same name may now occur within a template.<br />    No error ("unknown command") is generated any more, if a HTML comment starts with "${".<br />  2004-11-06 chdh:<br />    "$Include" command implemented.<br />  2004-11-20 chdh:<br />    "$Include" command changed so that the command text is not copied to the output file.<br />  2019-02-04 chdh:<br>    Class constructor changed to PHP 5 style, because the old constructor syntax is deprecated in PHP 7.<br></p>
<UL>
        </UL>
<hr>
<!-- =========== VAR SUMMARY =========== -->
<A NAME='var_summary'><!-- --></A>
<TABLE CELLPADDING='3' CELLSPACING='0' WIDTH='100%' CLASS="border">
        <TR BGCOLOR='#CCCCFF' CLASS='TableHeadingColor'>
                <TD>
                        <span CLASS="font12bold">Class Variable Summary</span>
            <A HREF="#top" CLASS="links">^TOP</A>
                </TD>
        </TR>

                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF="#var$subtemplateBasePath">$subtemplateBasePath</A></B></CODE>
                        <BR>
                        <blockquote> Base path for relative file names of subtemplates (for the $Include command). </blockquote>
                        <blockquote> Default Value: <CODE>-><-</CODE> </blockquote>
                </TD>
        </TR>
        </TABLE>
<hr>
<!-- =========== VAR INHERITED SUMMARY =========== -->
<A NAME='var_inherited_summary'><!-- --></A>
<TABLE CELLPADDING='3' CELLSPACING='0' WIDTH='100%' CLASS="border">
        <TR BGCOLOR='#CCCCFF' CLASS='TableHeadingColor'>
                <TD>
                        <span CLASS="font12bold">Inherited Class Variable Summary</span>
            <A HREF="#top" CLASS="links">^TOP</A>
                </TD>
        </TR>

        </TABLE>

<hr>
<!-- =========== METHOD SUMMARY =========== -->
<A NAME='method_summary'><!-- --></A>
<TABLE CELLPADDING='3' CELLSPACING='0' WIDTH='100%' Class="border">
        <TR BGCOLOR='#CCCCFF' CLASS='TableHeadingColor'>
                <TD>
                        <span class="font12bold">Method Summary</span>
            <A HREF="#top" CLASS="links">^TOP</A>
                </TD>
        </TR>

                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#method__construct'>void __construct (  )</A></B></CODE>
                        <BR>
                        <blockquote> Constructs a MiniTemplator object. </blockquote>
                </TD>
        </TR>
                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#methodaddBlock'>boolean addBlock ( $blockName )</A></B></CODE>
                        <BR>
                        <blockquote> Adds an instance of a template block. </blockquote>
                </TD>
        </TR>
                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#methodblockExists'>boolean blockExists ( $blockName )</A></B></CODE>
                        <BR>
                        <blockquote> Checks whether a block with the specified name exists within the template. </blockquote>
                </TD>
        </TR>
                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#methodgenerateOutput'>boolean generateOutput (  )</A></B></CODE>
                        <BR>
                        <blockquote> Generates the HTML page and writes it to the PHP output stream. </blockquote>
                </TD>
        </TR>
                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#methodgenerateOutputToFile'>boolean generateOutputToFile ( $fileName )</A></B></CODE>
                        <BR>
                        <blockquote> Generates the HTML page and writes it to a file. </blockquote>
                </TD>
        </TR>
                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#methodgenerateOutputToString'>boolean generateOutputToString ( &$outputString )</A></B></CODE>
                        <BR>
                        <blockquote> Generates the HTML page and writes it to a string. </blockquote>
                </TD>
        </TR>
                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#methodreadTemplateFromFile'>boolean readTemplateFromFile ( $fileName )</A></B></CODE>
                        <BR>
                        <blockquote> Reads the template from a file. </blockquote>
                </TD>
        </TR>
                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#methodreset'>void reset (  )</A></B></CODE>
                        <BR>
                        <blockquote> Clears all variables and blocks. </blockquote>
                </TD>
        </TR>
                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#methodsetTemplateString'>boolean setTemplateString ( $templateString )</A></B></CODE>
                        <BR>
                        <blockquote> Assigns a new template string. </blockquote>
                </TD>
        </TR>
                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#methodsetVariable'>boolean setVariable ( $variableName, $variableValue, [$isOptional = false] )</A></B></CODE>
                        <BR>
                        <blockquote> Sets a template variable. </blockquote>
                </TD>
        </TR>
                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#methodsetVariableEsc'>boolean setVariableEsc ( $variableName, $variableValue, [$isOptional = false] )</A></B></CODE>
                        <BR>
                        <blockquote> Sets a template variable to an escaped string. </blockquote>
                </TD>
        </TR>
                <!-- =========== Summary =========== -->
        <TR BGCOLOR='white' CLASS='TableRowColor'>
                <TD>
                        <CODE><B><A HREF='#methodvariableExists'>boolean variableExists ( $variableName )</A></B></CODE>
                        <BR>
                        <blockquote> Checks whether a variable with the specified name exists within the template. </blockquote>
                </TD>
        </TR>
        </TABLE>
<!-- =========== INHERITED METHOD SUMMARY =========== -->
<A NAME='functions_inherited'><!-- --></A>
<TABLE CELLPADDING='3' CELLSPACING='0' WIDTH='100%' CLASS="border">
        <TR BGCOLOR='#CCCCFF' CLASS='TableHeadingColor'>
                <TD>
                        <span CLASS="font12bold">Inherited Method Summary</span>
            <A HREF="#top" CLASS="links">^TOP</A>
                </TD>
        </TR>

        </TABLE>
<hr>
<!-- ============ VARIABLE DETAIL =========== -->

<A NAME='variable_detail'></A>
<TABLE CELLPADDING='3' CELLSPACING='0' WIDTH='100%' CLASS="border">
        <TR BGCOLOR='#CCCCFF' CLASS='TableHeadingColor'>
                <TD>
                        <span CLASS="font12bold">Variable Detail</span>
            <A HREF="#top" CLASS="links">^TOP</A>
                </TD>
        </TR>
</TABLE>

<A NAME='var$subtemplateBasePath'><!-- --></A><H3>$subtemplateBasePath</H3> (line <span class="linenumber">84</span>)<br />
<b>Data type:</b> mixed<br>Base path for relative file names of subtemplates (for the $Include command).
<br />
<p>This path is prepended to the subtemplate file names. It must be set before  readTemplateFromFile or setTemplateString.</p>
<UL>
                <LI><b>access</b> - <CODE>public</CODE></LI>
        </UL>
<HR>
<hr>
<!-- ============ METHOD DETAIL =========== -->

<A NAME='method_detail'></A>
<TABLE CELLPADDING='3' CELLSPACING='0' WIDTH='100%' CLASS="border">
        <TR BGCOLOR='#CCCCFF' CLASS='TableHeadingColor'>
                <TD>
                        <span class="font12bold">Method Detail</span>
            <A HREF="#top" CLASS="links">^TOP</A>
                </TD>
        </TR>
</TABLE>
<BR>
<DIV CLASS="function">
<A NAME='method__construct'><!-- --></A>
<SPAN CLASS="font12bold">__construct</SPAN> (line <span class="linenumber">163</span>)
</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Constructs a MiniTemplator object.
<br />

<DL>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
<DIV CLASS="function">
<A NAME='methodaddBlock'><!-- --></A>
<SPAN CLASS="font12bold">addBlock</SPAN> (line <span class="linenumber">605</span>)
<BR>
<SPAN CLASS="font10bold">Usage : </SPAN>
<span class="font10bold" style="color: #FF0000">boolean</SPAN>&nbsp;
<span class="font10bold" style="color: #0000FF">addBlock(
string
$blockName)</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Adds an instance of a template block.
<br />
<p>If the block contains variables, these variables must be set  before the block is added.  If the block contains subblocks (nested blocks), the subblocks  must be added before this block is added.  If multiple blocks exist with the specified name, an instance  is added for each block occurence.</p>
<DL>
        <DT class="font10bold">Function Parameters:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">string</SPAN> <span style="color: #0000FF;font-weight:bold">$blockName</SPAN></SPAN> blockName the name of the block to be added.</DD>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>return</b> - true on success, false on error (e.g. when no block with the specified name exists in the template).</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
<DIV CLASS="function">
<A NAME='methodblockExists'><!-- --></A>
<SPAN CLASS="font12bold">blockExists</SPAN> (line <span class="linenumber">656</span>)
<BR>
<SPAN CLASS="font10bold">Usage : </SPAN>
<span class="font10bold" style="color: #FF0000">boolean</SPAN>&nbsp;
<span class="font10bold" style="color: #0000FF">blockExists(
string
$blockName)</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Checks whether a block with the specified name exists within the template.
<br />

<DL>
        <DT class="font10bold">Function Parameters:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">string</SPAN> <span style="color: #0000FF;font-weight:bold">$blockName</SPAN></SPAN> the name of the block.</DD>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>return</b> - true if the block exists, or false when no block with the specified name exists in the template.</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
<DIV CLASS="function">
<A NAME='methodgenerateOutput'><!-- --></A>
<SPAN CLASS="font12bold">generateOutput</SPAN> (line <span class="linenumber">667</span>)
<BR>
<SPAN CLASS="font10bold">Usage : </SPAN>
<span class="font10bold" style="color: #FF0000">boolean</SPAN>&nbsp;
<span class="font10bold" style="color: #0000FF">generateOutput(
)</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Generates the HTML page and writes it to the PHP output stream.
<br />

<DL>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>return</b> - true on success, false on error.</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
<DIV CLASS="function">
<A NAME='methodgenerateOutputToFile'><!-- --></A>
<SPAN CLASS="font12bold">generateOutputToFile</SPAN> (line <span class="linenumber">678</span>)
<BR>
<SPAN CLASS="font10bold">Usage : </SPAN>
<span class="font10bold" style="color: #FF0000">boolean</SPAN>&nbsp;
<span class="font10bold" style="color: #0000FF">generateOutputToFile(
string
$fileName)</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Generates the HTML page and writes it to a file.
<br />

<DL>
        <DT class="font10bold">Function Parameters:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">string</SPAN> <span style="color: #0000FF;font-weight:bold">$fileName</SPAN></SPAN> name of the output file.</DD>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>return</b> - true on success, false on error.</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
<DIV CLASS="function">
<A NAME='methodgenerateOutputToString'><!-- --></A>
<SPAN CLASS="font12bold">generateOutputToString</SPAN> (line <span class="linenumber">694</span>)
<BR>
<SPAN CLASS="font10bold">Usage : </SPAN>
<span class="font10bold" style="color: #FF0000">boolean</SPAN>&nbsp;
<span class="font10bold" style="color: #0000FF">generateOutputToString(
mixed
&$outputString, string
$outputString)</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Generates the HTML page and writes it to a string.
<br />

<DL>
        <DT class="font10bold">Function Parameters:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">string</SPAN> <span style="color: #0000FF;font-weight:bold">$outputString</SPAN></SPAN> variable that receives the contents of the generated HTML page.</DD>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>return</b> - true on success, false on error.</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
<DIV CLASS="function">
<A NAME='methodreadTemplateFromFile'><!-- --></A>
<SPAN CLASS="font12bold">readTemplateFromFile</SPAN> (line <span class="linenumber">174</span>)
<BR>
<SPAN CLASS="font10bold">Usage : </SPAN>
<span class="font10bold" style="color: #FF0000">boolean</SPAN>&nbsp;
<span class="font10bold" style="color: #0000FF">readTemplateFromFile(
string
$fileName)</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Reads the template from a file.
<br />

<DL>
        <DT class="font10bold">Function Parameters:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">string</SPAN> <span style="color: #0000FF;font-weight:bold">$fileName</SPAN></SPAN> name of the file that contains the template.</DD>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>return</b> - true on success, false on error.</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
<DIV CLASS="function">
<A NAME='methodreset'><!-- --></A>
<SPAN CLASS="font12bold">reset</SPAN> (line <span class="linenumber">525</span>)
<BR>
<SPAN CLASS="font10bold">Usage : </SPAN>
<span class="font10bold" style="color: #FF0000">void</SPAN>&nbsp;
<span class="font10bold" style="color: #0000FF">reset(
)</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Clears all variables and blocks.
<br />
<p>This method can be used to produce another HTML page with the same  template. It is faster than creating another MiniTemplator object,  because the template does not have to be parsed again.  All variable values are cleared and all added block instances are deleted.</p>
<DL>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
<DIV CLASS="function">
<A NAME='methodsetTemplateString'><!-- --></A>
<SPAN CLASS="font12bold">setTemplateString</SPAN> (line <span class="linenumber">187</span>)
<BR>
<SPAN CLASS="font10bold">Usage : </SPAN>
<span class="font10bold" style="color: #FF0000">boolean</SPAN>&nbsp;
<span class="font10bold" style="color: #0000FF">setTemplateString(
string
$templateString)</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Assigns a new template string.
<br />

<DL>
        <DT class="font10bold">Function Parameters:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">string</SPAN> <span style="color: #0000FF;font-weight:bold">$templateString</SPAN></SPAN> contents of the template file.</DD>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>return</b> - true on success, false on error.</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
<DIV CLASS="function">
<A NAME='methodsetVariable'><!-- --></A>
<SPAN CLASS="font12bold">setVariable</SPAN> (line <span class="linenumber">551</span>)
<BR>
<SPAN CLASS="font10bold">Usage : </SPAN>
<span class="font10bold" style="color: #FF0000">boolean</SPAN>&nbsp;
<span class="font10bold" style="color: #0000FF">setVariable(
string
$variableName, string
$variableValue, [boolean
$isOptional = false])</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Sets a template variable.
<br />
<p>For variables that are used in blocks, the variable value  must be set before <a href="#methodaddBlock">addBlock</a> is called.</p>
<DL>
        <DT class="font10bold">Function Parameters:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">string</SPAN> <span style="color: #0000FF;font-weight:bold">$variableName</SPAN></SPAN> the name of the variable to be set.</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">string</SPAN> <span style="color: #0000FF;font-weight:bold">$variableValue</SPAN></SPAN> the new value of the variable.</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">boolean</SPAN> <span style="color: #0000FF;font-weight:bold">$isOptional</SPAN></SPAN> Specifies whether an error should be generated when the variable does not exist in the template. If $isOptional is false and the variable does not exist, an error is generated.</DD>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>return</b> - true on success, or false on error (e.g. when no variable with the specified name exists in the template and $isOptional is false).</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
<DIV CLASS="function">
<A NAME='methodsetVariableEsc'><!-- --></A>
<SPAN CLASS="font12bold">setVariableEsc</SPAN> (line <span class="linenumber">578</span>)
<BR>
<SPAN CLASS="font10bold">Usage : </SPAN>
<span class="font10bold" style="color: #FF0000">boolean</SPAN>&nbsp;
<span class="font10bold" style="color: #0000FF">setVariableEsc(
string
$variableName, string
$variableValue, [boolean
$isOptional = false])</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Sets a template variable to an escaped string.
<br />
<p>This method is identical to (@link setVariable), except that  the characters &lt;, &gt;, &amp;, ' and " of variableValue are  replaced by their corresponding HTML/XML character entity codes.  For variables that are used in blocks, the variable value  must be set before <a href="#methodaddBlock">addBlock</a> is called.</p>
<DL>
        <DT class="font10bold">Function Parameters:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">string</SPAN> <span style="color: #0000FF;font-weight:bold">$variableName</SPAN></SPAN> the name of the variable to be set.</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">string</SPAN> <span style="color: #0000FF;font-weight:bold">$variableValue</SPAN></SPAN> the new value of the variable. Special HTML/XML characters are escaped.</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">boolean</SPAN> <span style="color: #0000FF;font-weight:bold">$isOptional</SPAN></SPAN> Specifies whether an error should be generated when the variable does not exist in the template. If $isOptional is false and the variable does not exist, an error is generated.</DD>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>return</b> - true on success, or false on error (e.g. when no variable with the specified name exists in the template and $isOptional is false).</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
<DIV CLASS="function">
<A NAME='methodvariableExists'><!-- --></A>
<SPAN CLASS="font12bold">variableExists</SPAN> (line <span class="linenumber">588</span>)
<BR>
<SPAN CLASS="font10bold">Usage : </SPAN>
<span class="font10bold" style="color: #FF0000">boolean</SPAN>&nbsp;
<span class="font10bold" style="color: #0000FF">variableExists(
string
$variableName)</SPAN>
<BR>

<BR>
<SPAN CLASS="font10bold">Description : </SPAN>
Checks whether a variable with the specified name exists within the template.
<br />

<DL>
        <DT class="font10bold">Function Parameters:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><span STYLE="font-style: italic;">- <span style="color: #FF0000;font-weight:bold;">string</SPAN> <span style="color: #0000FF;font-weight:bold">$variableName</SPAN></SPAN> the name of the variable.</DD>

        <DT class="font10bold">Function Info:</DT>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>return</b> - true if the variable exists, or false when no variable with the specified name exists in the template.</DD>
                <DD CLASS="font10" STYLE="padding-bottom:5px;"><b>access</b> - public</DD>
        </DL>
</DIV>
<BR>
        <div id="credit">
                <hr>
                Documention generated on Sat, 20 Nov 2004 23:54:33 +0100 by <a href="http://www.phpdoc.org" target="_blank">phpDocumentor 1.2.0rc1</a>
        </div>
</body>
</html>
